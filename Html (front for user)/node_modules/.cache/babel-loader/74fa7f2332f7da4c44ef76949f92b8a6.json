{"remainingRequest":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\src\\mock\\d2-mock\\index.js","dependencies":[{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\src\\mock\\d2-mock\\index.js","mtime":1590487885000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\eslint-loader\\index.js","mtime":1588755592739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOi9Vc2Vycy81ODIxNS9EZXNrdG9wL1NjaG9vbE11c3RhcmRTcGFjZS9IdG1sIChmcm9udCBmb3IgdXNlcikvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgTW9jayBmcm9tICdtb2NranMnOwppbXBvcnQgcXMgZnJvbSAncXMnOwppbXBvcnQgd2l0aENyZWRlbnRpYWxzIGZyb20gJy4vcGF0Y2gvd2l0aENyZWRlbnRpYWxzJzsKLyog6KGl5LiBICovCgp3aXRoQ3JlZGVudGlhbHMoTW9jayk7Ci8qIE1vY2sg6buY6K6k6YWN572uICovCgpNb2NrLnNldHVwKHsKICB0aW1lb3V0OiAnMjAwLTMwMCcKfSk7Ci8qIOaJqeWxlSBb55Sf5oiQ5ZmoXSAqLwoKdmFyIEdlbmVyYXRvciA9IGZ1bmN0aW9uIEdlbmVyYXRvcihwcm9wLCB0ZW1wbGF0ZSkgewogIHZhciBvYmogPSB7fTsKICBvYmpbcHJvcF0gPSBbdGVtcGxhdGVdOwogIHJldHVybiBNb2NrLm1vY2sob2JqKTsKfTsKLyog5omp5bGVIFvlvqrnjq9dICovCgoKdmFyIFJlcGVhdCA9IGZ1bmN0aW9uIFJlcGVhdChudW0sIGl0ZW1UZW1wbGF0ZSkgewogIHJldHVybiBHZW5lcmF0b3IoImRhdGF8Ii5jb25jYXQobnVtKSwgaXRlbVRlbXBsYXRlKS5kYXRhOwp9OwoKdmFyIEN1c3RvbUV4dGVuZHMgPSB7CiAgR2VuZXJhdG9yOiBHZW5lcmF0b3IsCiAgUmVwZWF0OiBSZXBlYXQsCiAgTW9jazogTW9jaywKICBSYW5kb206IE1vY2suUmFuZG9tCn07Cgp2YXIgZXh0ZW5kID0gZnVuY3Rpb24gZXh0ZW5kKHByb3AsIHZhbHVlKSB7CiAgQ3VzdG9tRXh0ZW5kc1twcm9wXSA9IHZhbHVlOwp9OwovKiDoo4XphY3phY3nva7nu4QgKi8KCgp2YXIgd2lyZWQgPSBmdW5jdGlvbiB3aXJlZChfcmVmKSB7CiAgdmFyIHVybCA9IF9yZWYudXJsLAogICAgICB0eXBlID0gX3JlZi50eXBlLAogICAgICBib2R5ID0gX3JlZi5ib2R5OwogIHJldHVybiBfb2JqZWN0U3ByZWFkKHsKICAgIG1ldGhvZDogdHlwZSwKICAgIHBhcmFtczogcXMucGFyc2UodXJsLnNwbGl0KCc/JykubGVuZ3RoID4gMSA/IHVybC5zcGxpdCgnPycpWzFdIDogJycpLAogICAgYm9keTogSlNPTi5wYXJzZShib2R5KSwKICAgIHVybDogcXMucGFyc2UodXJsLnNwbGl0KCc/JylbMF0pCiAgfSwgQ3VzdG9tRXh0ZW5kcyk7Cn07Cgp2YXIgc2V0dXAgPSBmdW5jdGlvbiBzZXR1cChwYXRoLCBtZXRob2QsIGhhbmRsZSkgewogIE1vY2subW9jayhSZWdFeHAocGF0aCksIG1ldGhvZCwgdHlwZW9mIGhhbmRsZSA9PT0gJ2Z1bmN0aW9uJyA/IGZ1bmN0aW9uIChvKSB7CiAgICByZXR1cm4gaGFuZGxlKHdpcmVkKG8pKTsKICB9IDogaGFuZGxlKTsKfTsKCnZhciBsb2FkID0gZnVuY3Rpb24gbG9hZChjb2xsZWN0aW9uKSB7CiAgY29sbGVjdGlvbi5tYXAoZnVuY3Rpb24gKF9yZWYyKSB7CiAgICB2YXIgcGF0aCA9IF9yZWYyLnBhdGgsCiAgICAgICAgbWV0aG9kID0gX3JlZjIubWV0aG9kLAogICAgICAgIGhhbmRsZSA9IF9yZWYyLmhhbmRsZTsKCiAgICBpZiAobWV0aG9kID09PSAnKicpIHsKICAgICAgbWV0aG9kID0gWydnZXQnLCAnaGVhZCcsICdwb3N0JywgJ3B1dCcsICdkZWxldGUnLCAnY29ubmVjdCcsICdvcHRpb25zJywgJ3RyYWNlJywgJ3BhdGNoJ107CiAgICB9CgogICAgaWYgKHR5cGVvZiBtZXRob2QgPT09ICdzdHJpbmcnICYmIG1ldGhvZC5pbmRleE9mKCd8JykgPiAtMSkgbWV0aG9kID0gbWV0aG9kLnNwbGl0KCd8Jyk7CgogICAgaWYgKG1ldGhvZCBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgIG1ldGhvZC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gc2V0dXAocGF0aCwgaXRlbSwgaGFuZGxlKTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBzZXR1cChwYXRoLCBtZXRob2QsIGhhbmRsZSk7CiAgICB9CiAgfSk7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXA6IHNldHVwLAogIGxvYWQ6IGxvYWQsCiAgZXh0ZW5kOiBleHRlbmQKfTs="},{"version":3,"sources":["C:/Users/58215/Desktop/SchoolMustardSpace/Html (front for user)/src/mock/d2-mock/index.js"],"names":["Mock","qs","withCredentials","setup","timeout","Generator","prop","template","obj","mock","Repeat","num","itemTemplate","data","CustomExtends","Random","extend","value","wired","url","type","body","method","params","parse","split","length","JSON","path","handle","RegExp","o","load","collection","map","indexOf","Array","item"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\nimport qs from 'qs'\nimport withCredentials from './patch/withCredentials'\n\n/* 补丁 */\nwithCredentials(Mock)\n\n/* Mock 默认配置 */\nMock.setup({ timeout: '200-300' })\n\n/* 扩展 [生成器] */\nconst Generator = (prop, template) => {\n  const obj = {}\n  obj[prop] = [template]\n  return Mock.mock(obj)\n}\n\n/* 扩展 [循环] */\nconst Repeat = (num, itemTemplate) => Generator(`data|${num}`, itemTemplate).data\n\nconst CustomExtends = {\n  Generator,\n  Repeat,\n  Mock,\n  Random: Mock.Random\n}\n\nconst extend = (prop, value) => {\n  CustomExtends[prop] = value\n}\n\n/* 装配配置组 */\nconst wired = ({ url, type, body }) => ({\n  method: type,\n  params: qs.parse(url.split('?').length > 1 ? url.split('?')[1] : ''),\n  body: JSON.parse(body),\n  url: qs.parse(url.split('?')[0]),\n  ...CustomExtends\n})\n\nconst setup = (path, method, handle) => {\n  Mock.mock(\n    RegExp(path),\n    method,\n    typeof handle === 'function' ? o => handle(wired(o)) : handle\n  )\n}\n\nconst load = (collection) => {\n  collection.map(({ path, method, handle }) => {\n    if (method === '*') {\n      method = [\n        'get',\n        'head',\n        'post',\n        'put',\n        'delete',\n        'connect',\n        'options',\n        'trace',\n        'patch'\n      ]\n    }\n    if (typeof method === 'string' && method.indexOf('|') > -1) method = method.split('|')\n    if (method instanceof Array) {\n      method.map(item => setup(path, item, handle))\n    } else {\n      setup(path, method, handle)\n    }\n  })\n}\n\nexport default { setup, load, extend }\n"]}]}