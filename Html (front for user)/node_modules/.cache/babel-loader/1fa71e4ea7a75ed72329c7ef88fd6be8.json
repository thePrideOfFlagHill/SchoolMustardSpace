{"remainingRequest":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\src\\store\\modules\\d2admin\\modules\\page.js","dependencies":[{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\src\\store\\modules\\d2admin\\modules\\page.js","mtime":1590487885000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\58215\\Desktop\\SchoolMustardSpace\\Html (front for user)\\node_modules\\eslint-loader\\index.js","mtime":1588755592739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/58215/Desktop/SchoolMustardSpace/Html (front for user)/src/store/modules/d2admin/modules/page.js"],"names":["cloneDeep","uniq","get","router","setting","isKeepAlive","data","namespaced","state","pool","opened","openedLoaded","current","keepAlive","actions","isLoaded","Promise","resolve","timer","setInterval","clearInterval","openedLoad","commit","dispatch","dbName","path","defaultValue","page","user","root","value","valid","map","fullPath","push","find","item","name","Object","assign","filter","index","opened2db","openedUpdate","params","query","splice","openedSort","oldIndex","newIndex","add","tag","newTag","open","meta","pageOpendIndex","pageOpend","same","t","close","tagName","newPage","isCurrent","len","length","i","findIndex","routerObj","closeLeft","pageSelect","pageAim","currentIndex","forEach","app","$route","closeRight","closeOther","closeAll","mutations","keepAliveRefresh","e","keepAliveRemove","list","keepAlivePush","keep","keepAliveClean","currentSet","init","routes","route","children","hidden"],"mappings":"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","sourcesContent":["import { cloneDeep, uniq, get } from 'lodash'\nimport router from '@/router'\nimport setting from '@/setting.js'\n\n// 判定是否需要缓存\nconst isKeepAlive = data => get(data, 'meta.cache', false)\n\nexport default {\n  namespaced: true,\n  state: {\n    // 可以在多页 tab 模式下显示的页面\n    pool: [],\n    // 当前显示的多页面列表\n    opened: get(setting, 'page.opened', []),\n    // 已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n    openedLoaded: false,\n    // 当前页面\n    current: '',\n    // 需要缓存的页面 name\n    keepAlive: []\n  },\n  actions: {\n    /**\n     * @description 确认已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n     * @param {Object} context\n     */\n    isLoaded ({ state }) {\n      if (state.openedLoaded) return Promise.resolve()\n      return new Promise(resolve => {\n        const timer = setInterval(() => {\n          if (state.openedLoaded) resolve(clearInterval(timer))\n        }, 10)\n      })\n    },\n    /**\n     * @class opened\n     * @description 从持久化数据载入标签页列表\n     * @param {Object} context\n     */\n    async openedLoad ({ state, commit, dispatch }) {\n      // store 赋值\n      const value = await dispatch('d2admin/db/get', {\n        dbName: 'sys',\n        path: 'page.opened',\n        defaultValue: setting.page.opened,\n        user: true\n      }, { root: true })\n      // 在处理函数中进行数据优化 过滤掉现在已经失效的页签或者已经改变了信息的页签\n      // 以 fullPath 字段为准\n      // 如果页面过多的话可能需要优化算法\n      // valid 有效列表 1, 1, 0, 1 => 有效, 有效, 失效, 有效\n      const valid = []\n      // 处理数据\n      state.opened = value\n        .map(opened => {\n          // 忽略首页\n          if (opened.fullPath === '/index') {\n            valid.push(1)\n            return opened\n          }\n          // 尝试在所有的支持多标签页的页面里找到 name 匹配的页面\n          const find = state.pool.find(item => item.name === opened.name)\n          // 记录有效或无效信息\n          valid.push(find ? 1 : 0)\n          // 返回合并后的数据 新的覆盖旧的\n          // 新的数据中一般不会携带 params 和 query, 所以旧的参数会留存\n          return Object.assign({}, opened, find)\n        })\n        .filter((opened, index) => valid[index] === 1)\n      // 标记已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n      state.openedLoaded = true\n      // 根据 opened 数据生成缓存设置\n      commit('keepAliveRefresh')\n    },\n    /**\n     * 将 opened 属性赋值并持久化 在这之前请先确保已经更新了 state.opened\n     * @param {Object} context\n     */\n    async opened2db ({ state, dispatch }) {\n      // 设置数据\n      dispatch('d2admin/db/set', {\n        dbName: 'sys',\n        path: 'page.opened',\n        value: state.opened,\n        user: true\n      }, { root: true })\n    },\n    /**\n     * @class opened\n     * @description 更新页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { index, params, query, fullPath } 路由信息\n     */\n    async openedUpdate ({ state, commit, dispatch }, { index, params, query, fullPath }) {\n      // 更新页面列表某一项\n      let page = state.opened[index]\n      page.params = params || page.params\n      page.query = query || page.query\n      page.fullPath = fullPath || page.fullPath\n      state.opened.splice(index, 1, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 重排页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { oldIndex, newIndex } 位置信息\n     */\n    async openedSort ({ state, commit, dispatch }, { oldIndex, newIndex }) {\n      // 重排页面列表某一项\n      let page = state.opened[oldIndex]\n      state.opened.splice(oldIndex, 1)\n      state.opened.splice(newIndex, 0, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 新增一个 tag (打开一个页面)\n     * @param {Object} context\n     * @param {Object} payload new tag info\n     */\n    async add ({ state, commit, dispatch }, { tag, params, query, fullPath }) {\n      // 设置新的 tag 在新打开一个以前没打开过的页面时使用\n      let newTag = tag\n      newTag.params = params || newTag.params\n      newTag.query = query || newTag.query\n      newTag.fullPath = fullPath || newTag.fullPath\n      // 添加进当前显示的页面数组\n      state.opened.push(newTag)\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive(newTag)) commit('keepAlivePush', tag.name)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class current\n     * @description 打开一个新的页面\n     * @param {Object} context\n     * @param {Object} payload 从路由钩子的 to 对象上获取 { name, params, query, fullPath, meta } 路由信息\n     */\n    async open ({ state, commit, dispatch }, { name, params, query, fullPath, meta }) {\n      // 已经打开的页面\n      let opened = state.opened\n      // 判断此页面是否已经打开 并且记录位置\n      let pageOpendIndex = 0\n      const pageOpend = opened.find((page, index) => {\n        const same = page.fullPath === fullPath\n        pageOpendIndex = same ? index : pageOpendIndex\n        return same\n      })\n      if (pageOpend) {\n        // 页面以前打开过\n        await dispatch('openedUpdate', {\n          index: pageOpendIndex,\n          params,\n          query,\n          fullPath\n        })\n      } else {\n        // 页面以前没有打开过\n        let page = state.pool.find(t => t.name === name)\n        // 如果这里没有找到 page 代表这个路由虽然在框架内 但是不参与标签页显示\n        if (page) {\n          await dispatch('add', {\n            tag: Object.assign({}, page),\n            params,\n            query,\n            fullPath\n          })\n        }\n      }\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive({ meta })) commit('keepAlivePush', name)\n      // 设置当前的页面\n      commit('currentSet', fullPath)\n    },\n    /**\n     * @class opened\n     * @description 关闭一个 tag (关闭一个页面)\n     * @param {Object} context\n     * @param {Object} payload { tagName: 要关闭的标签名字 }\n     */\n    async close ({ state, commit, dispatch }, { tagName }) {\n      // 预定下个新页面\n      let newPage = {}\n      const isCurrent = state.current === tagName\n      // 如果关闭的页面就是当前显示的页面\n      if (isCurrent) {\n        // 去找一个新的页面\n        let len = state.opened.length\n        for (let i = 0; i < len; i++) {\n          if (state.opened[i].fullPath === tagName) {\n            newPage = i < len - 1 ? state.opened[i + 1] : state.opened[i - 1]\n            break\n          }\n        }\n      }\n      // 找到这个页面在已经打开的数据里是第几个\n      const index = state.opened.findIndex(page => page.fullPath === tagName)\n      if (index >= 0) {\n        // 如果这个页面是缓存的页面 将其在缓存设置中删除\n        commit('keepAliveRemove', state.opened[index].name)\n        // 更新数据 删除关闭的页面\n        state.opened.splice(index, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 决定最后停留的页面\n      if (isCurrent) {\n        const { name = 'index', params = {}, query = {} } = newPage\n        let routerObj = { name, params, query }\n        await router.push(routerObj)\n      }\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签左边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeLeft ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      if (currentIndex > 0) {\n        // 删除打开的页面 并在缓存设置中删除\n        for (let i = state.opened.length - 1; i >= 0; i--) {\n          if (state.opened[i].name === 'index' || i >= currentIndex) {\n            continue\n          }\n\n          commit('keepAliveRemove', state.opened[i].name)\n          state.opened.splice(i, 1)\n        }\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签右边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeRight ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex >= i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前激活之外的 tag\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeOther ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面数据 并更新缓存设置\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex === i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置新的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭所有 tag\n     * @param {Object} context\n     */\n    async closeAll ({ state, commit, dispatch }) {\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index') {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 关闭所有的标签页后需要判断一次现在是不是在首页\n      if (router.app.$route.name !== 'index') {\n        await router.push({ name: 'index' })\n      }\n    }\n  },\n  mutations: {\n    /**\n     * @class keepAlive\n     * @description 从已经打开的页面记录中更新需要缓存的页面记录\n     * @param {Object} state state\n     */\n    keepAliveRefresh (state) {\n      state.keepAlive = state.opened.filter(item => isKeepAlive(item)).map(e => e.name)\n    },\n    /**\n     * @description 删除一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAliveRemove (state, name) {\n      const list = cloneDeep(state.keepAlive)\n      const index = list.findIndex(item => item === name)\n      if (index !== -1) {\n        list.splice(index, 1)\n        state.keepAlive = list\n      }\n    },\n    /**\n     * @description 增加一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAlivePush (state, name) {\n      const keep = cloneDeep(state.keepAlive)\n      keep.push(name)\n      state.keepAlive = uniq(keep)\n    },\n    /**\n     * @description 清空页面缓存设置\n     * @param {Object} state state\n     */\n    keepAliveClean (state) {\n      state.keepAlive = []\n    },\n    /**\n     * @class current\n     * @description 设置当前激活的页面 fullPath\n     * @param {Object} state state\n     * @param {String} fullPath new fullPath\n     */\n    currentSet (state, fullPath) {\n      state.current = fullPath\n    },\n    /**\n     * @class pool\n     * @description 保存 pool (候选池)\n     * @param {Object} state state\n     * @param {Array} routes routes\n     */\n    init (state, routes) {\n      const pool = []\n      const push = function (routes) {\n        routes.forEach(route => {\n          if (route.children && route.children.length > 0) {\n            push(route.children)\n          } else {\n            if (!route.hidden) {\n              const { meta, name, path } = route\n              pool.push({ meta, name, path })\n            }\n          }\n        })\n      }\n      push(routes)\n      state.pool = pool\n    }\n  }\n}\n"]}]}