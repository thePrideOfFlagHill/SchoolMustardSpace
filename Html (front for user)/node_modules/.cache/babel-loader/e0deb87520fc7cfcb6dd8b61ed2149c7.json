{"remainingRequest":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\babel-loader\\lib\\index.js!D:\\实践\\d2-admin-start-kit-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\实践\\d2-admin-start-kit-master\\src\\store\\modules\\d2admin\\modules\\page.js","dependencies":[{"path":"D:\\实践\\d2-admin-start-kit-master\\src\\store\\modules\\d2admin\\modules\\page.js","mtime":1587908413000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1x1NUI5RVx1OERGNS9kMi1hZG1pbi1zdGFydC1raXQtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgY2xvbmVEZWVwLCB1bmlxLCBnZXQgfSBmcm9tICdsb2Rhc2gnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsKaW1wb3J0IHNldHRpbmcgZnJvbSAnQC9zZXR0aW5nLmpzJzsgLy8g5Yik5a6a5piv5ZCm6ZyA6KaB57yT5a2YCgp2YXIgaXNLZWVwQWxpdmUgPSBmdW5jdGlvbiBpc0tlZXBBbGl2ZShkYXRhKSB7CiAgcmV0dXJuIGdldChkYXRhLCAnbWV0YS5jYWNoZScsIGZhbHNlKTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICAvLyDlj6/ku6XlnKjlpJrpobUgdGFiIOaooeW8j+S4i+aYvuekuueahOmhtemdogogICAgcG9vbDogW10sCiAgICAvLyDlvZPliY3mmL7npLrnmoTlpJrpobXpnaLliJfooagKICAgIG9wZW5lZDogZ2V0KHNldHRpbmcsICdwYWdlLm9wZW5lZCcsIFtdKSwKICAgIC8vIOW3sue7j+WKoOi9veWkmuagh+etvumhteaVsOaNriBodHRwczovL2dpdGh1Yi5jb20vZDItcHJvamVjdHMvZDItYWRtaW4vaXNzdWVzLzIwMQogICAgb3BlbmVkTG9hZGVkOiBmYWxzZSwKICAgIC8vIOW9k+WJjemhtemdogogICAgY3VycmVudDogJycsCiAgICAvLyDpnIDopoHnvJPlrZjnmoTpobXpnaIgbmFtZQogICAga2VlcEFsaXZlOiBbXQogIH0sCiAgYWN0aW9uczogewogICAgLyoqCiAgICAgKiBAZGVzY3JpcHRpb24g56Gu6K6k5bey57uP5Yqg6L295aSa5qCH562+6aG15pWw5o2uIGh0dHBzOi8vZ2l0aHViLmNvbS9kMi1wcm9qZWN0cy9kMi1hZG1pbi9pc3N1ZXMvMjAxCiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICovCiAgICBpc0xvYWRlZDogZnVuY3Rpb24gaXNMb2FkZWQoX3JlZikgewogICAgICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlOwogICAgICBpZiAoc3RhdGUub3BlbmVkTG9hZGVkKSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChzdGF0ZS5vcGVuZWRMb2FkZWQpIHJlc29sdmUoY2xlYXJJbnRlcnZhbCh0aW1lcikpOwogICAgICAgIH0sIDEwKTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIG9wZW5lZAogICAgICogQGRlc2NyaXB0aW9uIOS7juaMgeS5heWMluaVsOaNrui9veWFpeagh+etvumhteWIl+ihqAogICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQKICAgICAqLwogICAgb3BlbmVkTG9hZDogZnVuY3Rpb24gb3BlbmVkTG9hZChfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgdmFsdWUsIHZhbGlkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjIuc3RhdGUsIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdkMmFkbWluL2RiL2dldCcsIHsKICAgICAgICAgICAgICAgICAgZGJOYW1lOiAnc3lzJywKICAgICAgICAgICAgICAgICAgcGF0aDogJ3BhZ2Uub3BlbmVkJywKICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzZXR0aW5nLnBhZ2Uub3BlbmVkLAogICAgICAgICAgICAgICAgICB1c2VyOiB0cnVlCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB2YWx1ZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAvLyDlnKjlpITnkIblh73mlbDkuK3ov5vooYzmlbDmja7kvJjljJYg6L+H5ruk5o6J546w5Zyo5bey57uP5aSx5pWI55qE6aG1562+5oiW6ICF5bey57uP5pS55Y+Y5LqG5L+h5oGv55qE6aG1562+CiAgICAgICAgICAgICAgICAvLyDku6UgZnVsbFBhdGgg5a2X5q615Li65YeGCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzpobXpnaLov4flpJrnmoTor53lj6/og73pnIDopoHkvJjljJbnrpfms5UKICAgICAgICAgICAgICAgIC8vIHZhbGlkIOacieaViOWIl+ihqCAxLCAxLCAwLCAxID0+IOacieaViCwg5pyJ5pWILCDlpLHmlYgsIOacieaViAogICAgICAgICAgICAgICAgdmFsaWQgPSBbXTsgLy8g5aSE55CG5pWw5o2uCgogICAgICAgICAgICAgICAgc3RhdGUub3BlbmVkID0gdmFsdWUubWFwKGZ1bmN0aW9uIChvcGVuZWQpIHsKICAgICAgICAgICAgICAgICAgLy8g5b+955Wl6aaW6aG1CiAgICAgICAgICAgICAgICAgIGlmIChvcGVuZWQuZnVsbFBhdGggPT09ICcvaW5kZXgnKSB7CiAgICAgICAgICAgICAgICAgICAgdmFsaWQucHVzaCgxKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3BlbmVkOwogICAgICAgICAgICAgICAgICB9IC8vIOWwneivleWcqOaJgOacieeahOaUr+aMgeWkmuagh+etvumhteeahOmhtemdoumHjOaJvuWIsCBuYW1lIOWMuemFjeeahOmhtemdogoKCiAgICAgICAgICAgICAgICAgIHZhciBmaW5kID0gc3RhdGUucG9vbC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZSA9PT0gb3BlbmVkLm5hbWU7CiAgICAgICAgICAgICAgICAgIH0pOyAvLyDorrDlvZXmnInmlYjmiJbml6DmlYjkv6Hmga8KCiAgICAgICAgICAgICAgICAgIHZhbGlkLnB1c2goZmluZCA/IDEgOiAwKTsgLy8g6L+U5Zue5ZCI5bm25ZCO55qE5pWw5o2uIOaWsOeahOimhuebluaXp+eahAogICAgICAgICAgICAgICAgICAvLyDmlrDnmoTmlbDmja7kuK3kuIDoiKzkuI3kvJrmkLrluKYgcGFyYW1zIOWSjCBxdWVyeSwg5omA5Lul5pen55qE5Y+C5pWw5Lya55WZ5a2YCgogICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgb3BlbmVkLCBmaW5kKTsKICAgICAgICAgICAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAob3BlbmVkLCBpbmRleCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gdmFsaWRbaW5kZXhdID09PSAxOwogICAgICAgICAgICAgICAgfSk7IC8vIOagh+iusOW3sue7j+WKoOi9veWkmuagh+etvumhteaVsOaNriBodHRwczovL2dpdGh1Yi5jb20vZDItcHJvamVjdHMvZDItYWRtaW4vaXNzdWVzLzIwMQoKICAgICAgICAgICAgICAgIHN0YXRlLm9wZW5lZExvYWRlZCA9IHRydWU7IC8vIOagueaNriBvcGVuZWQg5pWw5o2u55Sf5oiQ57yT5a2Y6K6+572uCgogICAgICAgICAgICAgICAgY29tbWl0KCdrZWVwQWxpdmVSZWZyZXNoJyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDlsIYgb3BlbmVkIOWxnuaAp+i1i+WAvOW5tuaMgeS5heWMliDlnKjov5nkuYvliY3or7flhYjnoa7kv53lt7Lnu4/mm7TmlrDkuoYgc3RhdGUub3BlbmVkCiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICovCiAgICBvcGVuZWQyZGI6IGZ1bmN0aW9uIG9wZW5lZDJkYihfcmVmMykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgc3RhdGUsIGRpc3BhdGNoOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlLCBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgLy8g6K6+572u5pWw5o2uCiAgICAgICAgICAgICAgICBkaXNwYXRjaCgnZDJhZG1pbi9kYi9zZXQnLCB7CiAgICAgICAgICAgICAgICAgIGRiTmFtZTogJ3N5cycsCiAgICAgICAgICAgICAgICAgIHBhdGg6ICdwYWdlLm9wZW5lZCcsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBzdGF0ZS5vcGVuZWQsCiAgICAgICAgICAgICAgICAgIHVzZXI6IHRydWUKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEBjbGFzcyBvcGVuZWQKICAgICAqIEBkZXNjcmlwdGlvbiDmm7TmlrDpobXpnaLliJfooajkuIrnmoTmn5DkuIDpobkKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0CiAgICAgKiBAcGFyYW0ge09iamVjdH0gcGF5bG9hZCB7IGluZGV4LCBwYXJhbXMsIHF1ZXJ5LCBmdWxsUGF0aCB9IOi3r+eUseS/oeaBrwogICAgICovCiAgICBvcGVuZWRVcGRhdGU6IGZ1bmN0aW9uIG9wZW5lZFVwZGF0ZShfcmVmNCwgX3JlZjUpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoLCBpbmRleCwgcGFyYW1zLCBxdWVyeSwgZnVsbFBhdGgsIHBhZ2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGUsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGluZGV4ID0gX3JlZjUuaW5kZXgsIHBhcmFtcyA9IF9yZWY1LnBhcmFtcywgcXVlcnkgPSBfcmVmNS5xdWVyeSwgZnVsbFBhdGggPSBfcmVmNS5mdWxsUGF0aDsKICAgICAgICAgICAgICAgIC8vIOabtOaWsOmhtemdouWIl+ihqOafkOS4gOmhuQogICAgICAgICAgICAgICAgcGFnZSA9IHN0YXRlLm9wZW5lZFtpbmRleF07CiAgICAgICAgICAgICAgICBwYWdlLnBhcmFtcyA9IHBhcmFtcyB8fCBwYWdlLnBhcmFtczsKICAgICAgICAgICAgICAgIHBhZ2UucXVlcnkgPSBxdWVyeSB8fCBwYWdlLnF1ZXJ5OwogICAgICAgICAgICAgICAgcGFnZS5mdWxsUGF0aCA9IGZ1bGxQYXRoIHx8IHBhZ2UuZnVsbFBhdGg7CiAgICAgICAgICAgICAgICBzdGF0ZS5vcGVuZWQuc3BsaWNlKGluZGV4LCAxLCBwYWdlKTsgLy8g5oyB5LmF5YyWCgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdvcGVuZWQyZGInKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIG9wZW5lZAogICAgICogQGRlc2NyaXB0aW9uIOmHjeaOkumhtemdouWIl+ihqOS4iueahOafkOS4gOmhuQogICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXlsb2FkIHsgb2xkSW5kZXgsIG5ld0luZGV4IH0g5L2N572u5L+h5oGvCiAgICAgKi8KICAgIG9wZW5lZFNvcnQ6IGZ1bmN0aW9uIG9wZW5lZFNvcnQoX3JlZjYsIF9yZWY3KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgb2xkSW5kZXgsIG5ld0luZGV4LCBwYWdlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWY2LnN0YXRlLCBjb21taXQgPSBfcmVmNi5jb21taXQsIGRpc3BhdGNoID0gX3JlZjYuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBvbGRJbmRleCA9IF9yZWY3Lm9sZEluZGV4LCBuZXdJbmRleCA9IF9yZWY3Lm5ld0luZGV4OwogICAgICAgICAgICAgICAgLy8g6YeN5o6S6aG16Z2i5YiX6KGo5p+Q5LiA6aG5CiAgICAgICAgICAgICAgICBwYWdlID0gc3RhdGUub3BlbmVkW29sZEluZGV4XTsKICAgICAgICAgICAgICAgIHN0YXRlLm9wZW5lZC5zcGxpY2Uob2xkSW5kZXgsIDEpOwogICAgICAgICAgICAgICAgc3RhdGUub3BlbmVkLnNwbGljZShuZXdJbmRleCwgMCwgcGFnZSk7IC8vIOaMgeS5heWMlgoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnb3BlbmVkMmRiJyk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEBjbGFzcyBvcGVuZWQKICAgICAqIEBkZXNjcmlwdGlvbiDmlrDlop7kuIDkuKogdGFnICjmiZPlvIDkuIDkuKrpobXpnaIpCiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICogQHBhcmFtIHtPYmplY3R9IHBheWxvYWQgbmV3IHRhZyBpbmZvCiAgICAgKi8KICAgIGFkZDogZnVuY3Rpb24gYWRkKF9yZWY4LCBfcmVmOSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZGlzcGF0Y2gsIHRhZywgcGFyYW1zLCBxdWVyeSwgZnVsbFBhdGgsIG5ld1RhZzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmOC5zdGF0ZSwgY29tbWl0ID0gX3JlZjguY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY4LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgdGFnID0gX3JlZjkudGFnLCBwYXJhbXMgPSBfcmVmOS5wYXJhbXMsIHF1ZXJ5ID0gX3JlZjkucXVlcnksIGZ1bGxQYXRoID0gX3JlZjkuZnVsbFBhdGg7CiAgICAgICAgICAgICAgICAvLyDorr7nva7mlrDnmoQgdGFnIOWcqOaWsOaJk+W8gOS4gOS4quS7peWJjeayoeaJk+W8gOi/h+eahOmhtemdouaXtuS9v+eUqAogICAgICAgICAgICAgICAgbmV3VGFnID0gdGFnOwogICAgICAgICAgICAgICAgbmV3VGFnLnBhcmFtcyA9IHBhcmFtcyB8fCBuZXdUYWcucGFyYW1zOwogICAgICAgICAgICAgICAgbmV3VGFnLnF1ZXJ5ID0gcXVlcnkgfHwgbmV3VGFnLnF1ZXJ5OwogICAgICAgICAgICAgICAgbmV3VGFnLmZ1bGxQYXRoID0gZnVsbFBhdGggfHwgbmV3VGFnLmZ1bGxQYXRoOyAvLyDmt7vliqDov5vlvZPliY3mmL7npLrnmoTpobXpnaLmlbDnu4QKCiAgICAgICAgICAgICAgICBzdGF0ZS5vcGVuZWQucHVzaChuZXdUYWcpOyAvLyDlpoLmnpzov5nkuKrpobXpnaLpnIDopoHnvJPlrZgg5bCG5YW25re75Yqg5Yiw57yT5a2Y6K6+572uCgogICAgICAgICAgICAgICAgaWYgKGlzS2VlcEFsaXZlKG5ld1RhZykpIGNvbW1pdCgna2VlcEFsaXZlUHVzaCcsIHRhZy5uYW1lKTsgLy8g5oyB5LmF5YyWCgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnb3BlbmVkMmRiJyk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBAY2xhc3MgY3VycmVudAogICAgICogQGRlc2NyaXB0aW9uIOaJk+W8gOS4gOS4quaWsOeahOmhtemdogogICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXlsb2FkIOS7jui3r+eUsemSqeWtkOeahCB0byDlr7nosaHkuIrojrflj5YgeyBuYW1lLCBwYXJhbXMsIHF1ZXJ5LCBmdWxsUGF0aCwgbWV0YSB9IOi3r+eUseS/oeaBrwogICAgICovCiAgICBvcGVuOiBmdW5jdGlvbiBvcGVuKF9yZWYxMCwgX3JlZjExKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgbmFtZSwgcGFyYW1zLCBxdWVyeSwgZnVsbFBhdGgsIG1ldGEsIG9wZW5lZCwgcGFnZU9wZW5kSW5kZXgsIHBhZ2VPcGVuZCwgcGFnZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmMTAuc3RhdGUsIGNvbW1pdCA9IF9yZWYxMC5jb21taXQsIGRpc3BhdGNoID0gX3JlZjEwLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgbmFtZSA9IF9yZWYxMS5uYW1lLCBwYXJhbXMgPSBfcmVmMTEucGFyYW1zLCBxdWVyeSA9IF9yZWYxMS5xdWVyeSwgZnVsbFBhdGggPSBfcmVmMTEuZnVsbFBhdGgsIG1ldGEgPSBfcmVmMTEubWV0YTsKICAgICAgICAgICAgICAgIC8vIOW3sue7j+aJk+W8gOeahOmhtemdogogICAgICAgICAgICAgICAgb3BlbmVkID0gc3RhdGUub3BlbmVkOyAvLyDliKTmlq3mraTpobXpnaLmmK/lkKblt7Lnu4/miZPlvIAg5bm25LiU6K6w5b2V5L2N572uCgogICAgICAgICAgICAgICAgcGFnZU9wZW5kSW5kZXggPSAwOwogICAgICAgICAgICAgICAgcGFnZU9wZW5kID0gb3BlbmVkLmZpbmQoZnVuY3Rpb24gKHBhZ2UsIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgIHZhciBzYW1lID0gcGFnZS5mdWxsUGF0aCA9PT0gZnVsbFBhdGg7CiAgICAgICAgICAgICAgICAgIHBhZ2VPcGVuZEluZGV4ID0gc2FtZSA/IGluZGV4IDogcGFnZU9wZW5kSW5kZXg7CiAgICAgICAgICAgICAgICAgIHJldHVybiBzYW1lOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKCFwYWdlT3BlbmQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdvcGVuZWRVcGRhdGUnLCB7CiAgICAgICAgICAgICAgICAgIGluZGV4OiBwYWdlT3BlbmRJbmRleCwKICAgICAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMsCiAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeSwKICAgICAgICAgICAgICAgICAgZnVsbFBhdGg6IGZ1bGxQYXRoCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgLy8g6aG16Z2i5Lul5YmN5rKh5pyJ5omT5byA6L+HCiAgICAgICAgICAgICAgICBwYWdlID0gc3RhdGUucG9vbC5maW5kKGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0Lm5hbWUgPT09IG5hbWU7CiAgICAgICAgICAgICAgICB9KTsgLy8g5aaC5p6c6L+Z6YeM5rKh5pyJ5om+5YiwIHBhZ2Ug5Luj6KGo6L+Z5Liq6Lev55Sx6Jm954S25Zyo5qGG5p625YaFIOS9huaYr+S4jeWPguS4juagh+etvumhteaYvuekugoKICAgICAgICAgICAgICAgIGlmICghcGFnZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdhZGQnLCB7CiAgICAgICAgICAgICAgICAgIHRhZzogT2JqZWN0LmFzc2lnbih7fSwgcGFnZSksCiAgICAgICAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLAogICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnksCiAgICAgICAgICAgICAgICAgIGZ1bGxQYXRoOiBmdWxsUGF0aAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICAvLyDlpoLmnpzov5nkuKrpobXpnaLpnIDopoHnvJPlrZgg5bCG5YW25re75Yqg5Yiw57yT5a2Y6K6+572uCiAgICAgICAgICAgICAgICBpZiAoaXNLZWVwQWxpdmUoewogICAgICAgICAgICAgICAgICBtZXRhOiBtZXRhCiAgICAgICAgICAgICAgICB9KSkgY29tbWl0KCdrZWVwQWxpdmVQdXNoJywgbmFtZSk7IC8vIOiuvue9ruW9k+WJjeeahOmhtemdogoKICAgICAgICAgICAgICAgIGNvbW1pdCgnY3VycmVudFNldCcsIGZ1bGxQYXRoKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNik7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEBjbGFzcyBvcGVuZWQKICAgICAqIEBkZXNjcmlwdGlvbiDlhbPpl63kuIDkuKogdGFnICjlhbPpl63kuIDkuKrpobXpnaIpCiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICogQHBhcmFtIHtPYmplY3R9IHBheWxvYWQgeyB0YWdOYW1lOiDopoHlhbPpl63nmoTmoIfnrb7lkI3lrZcgfQogICAgICovCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoX3JlZjEyLCBfcmVmMTMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoLCB0YWdOYW1lLCBuZXdQYWdlLCBpc0N1cnJlbnQsIGxlbiwgaSwgaW5kZXgsIF9uZXdQYWdlLCBfbmV3UGFnZSRuYW1lLCBuYW1lLCBfbmV3UGFnZSRwYXJhbXMsIHBhcmFtcywgX25ld1BhZ2UkcXVlcnksIHF1ZXJ5LCByb3V0ZXJPYmo7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYxMi5zdGF0ZSwgY29tbWl0ID0gX3JlZjEyLmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmMTIuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICB0YWdOYW1lID0gX3JlZjEzLnRhZ05hbWU7CiAgICAgICAgICAgICAgICAvLyDpooTlrprkuIvkuKrmlrDpobXpnaIKICAgICAgICAgICAgICAgIG5ld1BhZ2UgPSB7fTsKICAgICAgICAgICAgICAgIGlzQ3VycmVudCA9IHN0YXRlLmN1cnJlbnQgPT09IHRhZ05hbWU7IC8vIOWmguaenOWFs+mXreeahOmhtemdouWwseaYr+W9k+WJjeaYvuekuueahOmhtemdogoKICAgICAgICAgICAgICAgIGlmICghaXNDdXJyZW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIOWOu+aJvuS4gOS4quaWsOeahOmhtemdogogICAgICAgICAgICAgICAgbGVuID0gc3RhdGUub3BlbmVkLmxlbmd0aDsKICAgICAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpZiAoIShpIDwgbGVuKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5vcGVuZWRbaV0uZnVsbFBhdGggPT09IHRhZ05hbWUpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIG5ld1BhZ2UgPSBpIDwgbGVuIC0gMSA/IHN0YXRlLm9wZW5lZFtpICsgMV0gOiBzdGF0ZS5vcGVuZWRbaSAtIDFdOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5hYnJ1cHQoImJyZWFrIiwgMTQpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICAvLyDmib7liLDov5nkuKrpobXpnaLlnKjlt7Lnu4/miZPlvIDnmoTmlbDmja7ph4zmmK/nrKzlh6DkuKoKICAgICAgICAgICAgICAgIGluZGV4ID0gc3RhdGUub3BlbmVkLmZpbmRJbmRleChmdW5jdGlvbiAocGFnZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gcGFnZS5mdWxsUGF0aCA9PT0gdGFnTmFtZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGlmIChpbmRleCA+PSAwKSB7CiAgICAgICAgICAgICAgICAgIC8vIOWmguaenOi/meS4qumhtemdouaYr+e8k+WtmOeahOmhtemdoiDlsIblhbblnKjnvJPlrZjorr7nva7kuK3liKDpmaQKICAgICAgICAgICAgICAgICAgY29tbWl0KCdrZWVwQWxpdmVSZW1vdmUnLCBzdGF0ZS5vcGVuZWRbaW5kZXhdLm5hbWUpOyAvLyDmm7TmlrDmlbDmja4g5Yig6Zmk5YWz6Zet55qE6aG16Z2iCgogICAgICAgICAgICAgICAgICBzdGF0ZS5vcGVuZWQuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgICAgICAgIH0gLy8g5oyB5LmF5YyWCgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ29wZW5lZDJkYicpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgaWYgKCFpc0N1cnJlbnQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAyMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX25ld1BhZ2UgPSBuZXdQYWdlLCBfbmV3UGFnZSRuYW1lID0gX25ld1BhZ2UubmFtZSwgbmFtZSA9IF9uZXdQYWdlJG5hbWUgPT09IHZvaWQgMCA/ICdpbmRleCcgOiBfbmV3UGFnZSRuYW1lLCBfbmV3UGFnZSRwYXJhbXMgPSBfbmV3UGFnZS5wYXJhbXMsIHBhcmFtcyA9IF9uZXdQYWdlJHBhcmFtcyA9PT0gdm9pZCAwID8ge30gOiBfbmV3UGFnZSRwYXJhbXMsIF9uZXdQYWdlJHF1ZXJ5ID0gX25ld1BhZ2UucXVlcnksIHF1ZXJ5ID0gX25ld1BhZ2UkcXVlcnkgPT09IHZvaWQgMCA/IHt9IDogX25ld1BhZ2UkcXVlcnk7CiAgICAgICAgICAgICAgICByb3V0ZXJPYmogPSB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLAogICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDIzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHJvdXRlck9iaik7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTcpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBAY2xhc3Mgb3BlbmVkCiAgICAgKiBAZGVzY3JpcHRpb24g5YWz6Zet5b2T5YmN5qCH562+5bem6L6555qE5qCH562+CiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICogQHBhcmFtIHtPYmplY3R9IHBheWxvYWQgeyBwYWdlU2VsZWN0OiDlvZPliY3pgInkuK3nmoR0YWdOYW1lIH0KICAgICAqLwogICAgY2xvc2VMZWZ0OiBmdW5jdGlvbiBjbG9zZUxlZnQoX3JlZjE0KSB7CiAgICAgIHZhciBfYXJndW1lbnRzID0gYXJndW1lbnRzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOCgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZGlzcGF0Y2gsIF9yZWYxNSwgcGFnZVNlbGVjdCwgcGFnZUFpbSwgY3VycmVudEluZGV4LCBpOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTgkKF9jb250ZXh0OCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmMTQuc3RhdGUsIGNvbW1pdCA9IF9yZWYxNC5jb21taXQsIGRpc3BhdGNoID0gX3JlZjE0LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX3JlZjE1ID0gX2FyZ3VtZW50cy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHNbMV0gOiB7fSwgcGFnZVNlbGVjdCA9IF9yZWYxNS5wYWdlU2VsZWN0OwogICAgICAgICAgICAgICAgcGFnZUFpbSA9IHBhZ2VTZWxlY3QgfHwgc3RhdGUuY3VycmVudDsKICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IDA7CiAgICAgICAgICAgICAgICBzdGF0ZS5vcGVuZWQuZm9yRWFjaChmdW5jdGlvbiAocGFnZSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgaWYgKHBhZ2UuZnVsbFBhdGggPT09IHBhZ2VBaW0pIGN1cnJlbnRJbmRleCA9IGluZGV4OwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKCEoY3VycmVudEluZGV4ID4gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaSA9IHN0YXRlLm9wZW5lZC5sZW5ndGggLSAxOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpZiAoIShpID49IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghKHN0YXRlLm9wZW5lZFtpXS5uYW1lID09PSAnaW5kZXgnIHx8IGkgPj0gY3VycmVudEluZGV4KSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LmFicnVwdCgiY29udGludWUiLCAxMik7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBjb21taXQoJ2tlZXBBbGl2ZVJlbW92ZScsIHN0YXRlLm9wZW5lZFtpXS5uYW1lKTsKICAgICAgICAgICAgICAgIHN0YXRlLm9wZW5lZC5zcGxpY2UoaSwgMSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBpLS07CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ29wZW5lZDJkYicpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgLy8g6K6+572u5b2T5YmN55qE6aG16Z2iCiAgICAgICAgICAgICAgICBzdGF0ZS5jdXJyZW50ID0gcGFnZUFpbTsKCiAgICAgICAgICAgICAgICBpZiAoIShyb3V0ZXIuYXBwLiRyb3V0ZS5mdWxsUGF0aCAhPT0gcGFnZUFpbSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAyMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAyMTsKICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZXIucHVzaChwYWdlQWltKTsKCiAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOCk7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEBjbGFzcyBvcGVuZWQKICAgICAqIEBkZXNjcmlwdGlvbiDlhbPpl63lvZPliY3moIfnrb7lj7PovrnnmoTmoIfnrb4KICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0CiAgICAgKiBAcGFyYW0ge09iamVjdH0gcGF5bG9hZCB7IHBhZ2VTZWxlY3Q6IOW9k+WJjemAieS4reeahHRhZ05hbWUgfQogICAgICovCiAgICBjbG9zZVJpZ2h0OiBmdW5jdGlvbiBjbG9zZVJpZ2h0KF9yZWYxNikgewogICAgICB2YXIgX2FyZ3VtZW50czIgPSBhcmd1bWVudHM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU5KCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgX3JlZjE3LCBwYWdlU2VsZWN0LCBwYWdlQWltLCBjdXJyZW50SW5kZXgsIGk7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYxNi5zdGF0ZSwgY29tbWl0ID0gX3JlZjE2LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmMTYuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBfcmVmMTcgPSBfYXJndW1lbnRzMi5sZW5ndGggPiAxICYmIF9hcmd1bWVudHMyWzFdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzMlsxXSA6IHt9LCBwYWdlU2VsZWN0ID0gX3JlZjE3LnBhZ2VTZWxlY3Q7CiAgICAgICAgICAgICAgICBwYWdlQWltID0gcGFnZVNlbGVjdCB8fCBzdGF0ZS5jdXJyZW50OwogICAgICAgICAgICAgICAgY3VycmVudEluZGV4ID0gMDsKICAgICAgICAgICAgICAgIHN0YXRlLm9wZW5lZC5mb3JFYWNoKGZ1bmN0aW9uIChwYWdlLCBpbmRleCkgewogICAgICAgICAgICAgICAgICBpZiAocGFnZS5mdWxsUGF0aCA9PT0gcGFnZUFpbSkgY3VycmVudEluZGV4ID0gaW5kZXg7CiAgICAgICAgICAgICAgICB9KTsgLy8g5Yig6Zmk5omT5byA55qE6aG16Z2iIOW5tuWcqOe8k+WtmOiuvue9ruS4reWIoOmZpAoKICAgICAgICAgICAgICAgIGkgPSBzdGF0ZS5vcGVuZWQubGVuZ3RoIC0gMTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgaWYgKCEoaSA+PSAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5vcGVuZWRbaV0ubmFtZSA9PT0gJ2luZGV4JyB8fCBjdXJyZW50SW5kZXggPj0gaSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LmFicnVwdCgiY29udGludWUiLCAxMSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGNvbW1pdCgna2VlcEFsaXZlUmVtb3ZlJywgc3RhdGUub3BlbmVkW2ldLm5hbWUpOwogICAgICAgICAgICAgICAgc3RhdGUub3BlbmVkLnNwbGljZShpLCAxKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGktLTsKICAgICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnb3BlbmVkMmRiJyk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICAvLyDorr7nva7lvZPliY3nmoTpobXpnaIKICAgICAgICAgICAgICAgIHN0YXRlLmN1cnJlbnQgPSBwYWdlQWltOwoKICAgICAgICAgICAgICAgIGlmICghKHJvdXRlci5hcHAuJHJvdXRlLmZ1bGxQYXRoICE9PSBwYWdlQWltKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHBhZ2VBaW0pOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU5KTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIG9wZW5lZAogICAgICogQGRlc2NyaXB0aW9uIOWFs+mXreW9k+WJjea/gOa0u+S5i+WklueahCB0YWcKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0CiAgICAgKiBAcGFyYW0ge09iamVjdH0gcGF5bG9hZCB7IHBhZ2VTZWxlY3Q6IOW9k+WJjemAieS4reeahHRhZ05hbWUgfQogICAgICovCiAgICBjbG9zZU90aGVyOiBmdW5jdGlvbiBjbG9zZU90aGVyKF9yZWYxOCkgewogICAgICB2YXIgX2FyZ3VtZW50czMgPSBhcmd1bWVudHM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZGlzcGF0Y2gsIF9yZWYxOSwgcGFnZVNlbGVjdCwgcGFnZUFpbSwgY3VycmVudEluZGV4LCBpOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEwJChfY29udGV4dDEwKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTAucHJldiA9IF9jb250ZXh0MTAubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjE4LnN0YXRlLCBjb21taXQgPSBfcmVmMTguY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYxOC5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9yZWYxOSA9IF9hcmd1bWVudHMzLmxlbmd0aCA+IDEgJiYgX2FyZ3VtZW50czNbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHMzWzFdIDoge30sIHBhZ2VTZWxlY3QgPSBfcmVmMTkucGFnZVNlbGVjdDsKICAgICAgICAgICAgICAgIHBhZ2VBaW0gPSBwYWdlU2VsZWN0IHx8IHN0YXRlLmN1cnJlbnQ7CiAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggPSAwOwogICAgICAgICAgICAgICAgc3RhdGUub3BlbmVkLmZvckVhY2goZnVuY3Rpb24gKHBhZ2UsIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgIGlmIChwYWdlLmZ1bGxQYXRoID09PSBwYWdlQWltKSBjdXJyZW50SW5kZXggPSBpbmRleDsKICAgICAgICAgICAgICAgIH0pOyAvLyDliKDpmaTmiZPlvIDnmoTpobXpnaLmlbDmja4g5bm25pu05paw57yT5a2Y6K6+572uCgogICAgICAgICAgICAgICAgaSA9IHN0YXRlLm9wZW5lZC5sZW5ndGggLSAxOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBpZiAoIShpID49IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5vcGVuZWRbaV0ubmFtZSA9PT0gJ2luZGV4JyB8fCBjdXJyZW50SW5kZXggPT09IGkpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLmFicnVwdCgiY29udGludWUiLCAxMSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGNvbW1pdCgna2VlcEFsaXZlUmVtb3ZlJywgc3RhdGUub3BlbmVkW2ldLm5hbWUpOwogICAgICAgICAgICAgICAgc3RhdGUub3BlbmVkLnNwbGljZShpLCAxKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGktLTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdvcGVuZWQyZGInKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIC8vIOiuvue9ruaWsOeahOmhtemdogogICAgICAgICAgICAgICAgc3RhdGUuY3VycmVudCA9IHBhZ2VBaW07CgogICAgICAgICAgICAgICAgaWYgKCEocm91dGVyLmFwcC4kcm91dGUuZnVsbFBhdGggIT09IHBhZ2VBaW0pKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAyMDsKICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZXIucHVzaChwYWdlQWltKTsKCiAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEwKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIG9wZW5lZAogICAgICogQGRlc2NyaXB0aW9uIOWFs+mXreaJgOaciSB0YWcKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0CiAgICAgKi8KICAgIGNsb3NlQWxsOiBmdW5jdGlvbiBjbG9zZUFsbChfcmVmMjApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTExKCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTExJChfY29udGV4dDExKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjIwLnN0YXRlLCBjb21taXQgPSBfcmVmMjAuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYyMC5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGkgPSBzdGF0ZS5vcGVuZWQubGVuZ3RoIC0gMTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgaWYgKCEoaSA+PSAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDExLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUub3BlbmVkW2ldLm5hbWUgPT09ICdpbmRleCcpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLmFicnVwdCgiY29udGludWUiLCA3KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgY29tbWl0KCdrZWVwQWxpdmVSZW1vdmUnLCBzdGF0ZS5vcGVuZWRbaV0ubmFtZSk7CiAgICAgICAgICAgICAgICBzdGF0ZS5vcGVuZWQuc3BsaWNlKGksIDEpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpLS07CiAgICAgICAgICAgICAgICBfY29udGV4dDExLm5leHQgPSAyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDExLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnb3BlbmVkMmRiJyk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBpZiAoIShyb3V0ZXIuYXBwLiRyb3V0ZS5uYW1lICE9PSAnaW5kZXgnKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDExLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAnaW5kZXgnCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTEuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTExKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8qKgogICAgICogQGNsYXNzIGtlZXBBbGl2ZQogICAgICogQGRlc2NyaXB0aW9uIOS7juW3sue7j+aJk+W8gOeahOmhtemdouiusOW9leS4reabtOaWsOmcgOimgee8k+WtmOeahOmhtemdouiusOW9lQogICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIHN0YXRlCiAgICAgKi8KICAgIGtlZXBBbGl2ZVJlZnJlc2g6IGZ1bmN0aW9uIGtlZXBBbGl2ZVJlZnJlc2goc3RhdGUpIHsKICAgICAgc3RhdGUua2VlcEFsaXZlID0gc3RhdGUub3BlbmVkLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpc0tlZXBBbGl2ZShpdGVtKTsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUubmFtZTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGRlc2NyaXB0aW9uIOWIoOmZpOS4gOS4qumhtemdoueahOe8k+WtmOiuvue9rgogICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIHN0YXRlCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBuYW1lCiAgICAgKi8KICAgIGtlZXBBbGl2ZVJlbW92ZTogZnVuY3Rpb24ga2VlcEFsaXZlUmVtb3ZlKHN0YXRlLCBuYW1lKSB7CiAgICAgIHZhciBsaXN0ID0gY2xvbmVEZWVwKHN0YXRlLmtlZXBBbGl2ZSk7CiAgICAgIHZhciBpbmRleCA9IGxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0gPT09IG5hbWU7CiAgICAgIH0pOwoKICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgIGxpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICBzdGF0ZS5rZWVwQWxpdmUgPSBsaXN0OwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQGRlc2NyaXB0aW9uIOWinuWKoOS4gOS4qumhtemdoueahOe8k+WtmOiuvue9rgogICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIHN0YXRlCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBuYW1lCiAgICAgKi8KICAgIGtlZXBBbGl2ZVB1c2g6IGZ1bmN0aW9uIGtlZXBBbGl2ZVB1c2goc3RhdGUsIG5hbWUpIHsKICAgICAgdmFyIGtlZXAgPSBjbG9uZURlZXAoc3RhdGUua2VlcEFsaXZlKTsKICAgICAga2VlcC5wdXNoKG5hbWUpOwogICAgICBzdGF0ZS5rZWVwQWxpdmUgPSB1bmlxKGtlZXApOwogICAgfSwKCiAgICAvKioKICAgICAqIEBkZXNjcmlwdGlvbiDmuIXnqbrpobXpnaLnvJPlrZjorr7nva4KICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZSBzdGF0ZQogICAgICovCiAgICBrZWVwQWxpdmVDbGVhbjogZnVuY3Rpb24ga2VlcEFsaXZlQ2xlYW4oc3RhdGUpIHsKICAgICAgc3RhdGUua2VlcEFsaXZlID0gW107CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIGN1cnJlbnQKICAgICAqIEBkZXNjcmlwdGlvbiDorr7nva7lvZPliY3mv4DmtLvnmoTpobXpnaIgZnVsbFBhdGgKICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZSBzdGF0ZQogICAgICogQHBhcmFtIHtTdHJpbmd9IGZ1bGxQYXRoIG5ldyBmdWxsUGF0aAogICAgICovCiAgICBjdXJyZW50U2V0OiBmdW5jdGlvbiBjdXJyZW50U2V0KHN0YXRlLCBmdWxsUGF0aCkgewogICAgICBzdGF0ZS5jdXJyZW50ID0gZnVsbFBhdGg7CiAgICB9LAoKICAgIC8qKgogICAgICogQGNsYXNzIHBvb2wKICAgICAqIEBkZXNjcmlwdGlvbiDkv53lrZggcG9vbCAo5YCZ6YCJ5rGgKQogICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIHN0YXRlCiAgICAgKiBAcGFyYW0ge0FycmF5fSByb3V0ZXMgcm91dGVzCiAgICAgKi8KICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoc3RhdGUsIHJvdXRlcykgewogICAgICB2YXIgcG9vbCA9IFtdOwoKICAgICAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHJvdXRlcykgewogICAgICAgIHJvdXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChyb3V0ZSkgewogICAgICAgICAgaWYgKHJvdXRlLmNoaWxkcmVuICYmIHJvdXRlLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgcHVzaChyb3V0ZS5jaGlsZHJlbik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoIXJvdXRlLmhpZGRlbikgewogICAgICAgICAgICAgIHZhciBtZXRhID0gcm91dGUubWV0YSwKICAgICAgICAgICAgICAgICAgbmFtZSA9IHJvdXRlLm5hbWUsCiAgICAgICAgICAgICAgICAgIHBhdGggPSByb3V0ZS5wYXRoOwogICAgICAgICAgICAgIHBvb2wucHVzaCh7CiAgICAgICAgICAgICAgICBtZXRhOiBtZXRhLAogICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgcHVzaChyb3V0ZXMpOwogICAgICBzdGF0ZS5wb29sID0gcG9vbDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["D:/实践/d2-admin-start-kit-master/src/store/modules/d2admin/modules/page.js"],"names":["cloneDeep","uniq","get","router","setting","isKeepAlive","data","namespaced","state","pool","opened","openedLoaded","current","keepAlive","actions","isLoaded","Promise","resolve","timer","setInterval","clearInterval","openedLoad","commit","dispatch","dbName","path","defaultValue","page","user","root","value","valid","map","fullPath","push","find","item","name","Object","assign","filter","index","opened2db","openedUpdate","params","query","splice","openedSort","oldIndex","newIndex","add","tag","newTag","open","meta","pageOpendIndex","pageOpend","same","t","close","tagName","newPage","isCurrent","len","length","i","findIndex","routerObj","closeLeft","pageSelect","pageAim","currentIndex","forEach","app","$route","closeRight","closeOther","closeAll","mutations","keepAliveRefresh","e","keepAliveRemove","list","keepAlivePush","keep","keepAliveClean","currentSet","init","routes","route","children","hidden"],"mappings":"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","sourcesContent":["import { cloneDeep, uniq, get } from 'lodash'\nimport router from '@/router'\nimport setting from '@/setting.js'\n\n// 判定是否需要缓存\nconst isKeepAlive = data => get(data, 'meta.cache', false)\n\nexport default {\n  namespaced: true,\n  state: {\n    // 可以在多页 tab 模式下显示的页面\n    pool: [],\n    // 当前显示的多页面列表\n    opened: get(setting, 'page.opened', []),\n    // 已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n    openedLoaded: false,\n    // 当前页面\n    current: '',\n    // 需要缓存的页面 name\n    keepAlive: []\n  },\n  actions: {\n    /**\n     * @description 确认已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n     * @param {Object} context\n     */\n    isLoaded ({ state }) {\n      if (state.openedLoaded) return Promise.resolve()\n      return new Promise(resolve => {\n        const timer = setInterval(() => {\n          if (state.openedLoaded) resolve(clearInterval(timer))\n        }, 10)\n      })\n    },\n    /**\n     * @class opened\n     * @description 从持久化数据载入标签页列表\n     * @param {Object} context\n     */\n    async openedLoad ({ state, commit, dispatch }) {\n      // store 赋值\n      const value = await dispatch('d2admin/db/get', {\n        dbName: 'sys',\n        path: 'page.opened',\n        defaultValue: setting.page.opened,\n        user: true\n      }, { root: true })\n      // 在处理函数中进行数据优化 过滤掉现在已经失效的页签或者已经改变了信息的页签\n      // 以 fullPath 字段为准\n      // 如果页面过多的话可能需要优化算法\n      // valid 有效列表 1, 1, 0, 1 => 有效, 有效, 失效, 有效\n      const valid = []\n      // 处理数据\n      state.opened = value\n        .map(opened => {\n          // 忽略首页\n          if (opened.fullPath === '/index') {\n            valid.push(1)\n            return opened\n          }\n          // 尝试在所有的支持多标签页的页面里找到 name 匹配的页面\n          const find = state.pool.find(item => item.name === opened.name)\n          // 记录有效或无效信息\n          valid.push(find ? 1 : 0)\n          // 返回合并后的数据 新的覆盖旧的\n          // 新的数据中一般不会携带 params 和 query, 所以旧的参数会留存\n          return Object.assign({}, opened, find)\n        })\n        .filter((opened, index) => valid[index] === 1)\n      // 标记已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n      state.openedLoaded = true\n      // 根据 opened 数据生成缓存设置\n      commit('keepAliveRefresh')\n    },\n    /**\n     * 将 opened 属性赋值并持久化 在这之前请先确保已经更新了 state.opened\n     * @param {Object} context\n     */\n    async opened2db ({ state, dispatch }) {\n      // 设置数据\n      dispatch('d2admin/db/set', {\n        dbName: 'sys',\n        path: 'page.opened',\n        value: state.opened,\n        user: true\n      }, { root: true })\n    },\n    /**\n     * @class opened\n     * @description 更新页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { index, params, query, fullPath } 路由信息\n     */\n    async openedUpdate ({ state, commit, dispatch }, { index, params, query, fullPath }) {\n      // 更新页面列表某一项\n      let page = state.opened[index]\n      page.params = params || page.params\n      page.query = query || page.query\n      page.fullPath = fullPath || page.fullPath\n      state.opened.splice(index, 1, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 重排页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { oldIndex, newIndex } 位置信息\n     */\n    async openedSort ({ state, commit, dispatch }, { oldIndex, newIndex }) {\n      // 重排页面列表某一项\n      let page = state.opened[oldIndex]\n      state.opened.splice(oldIndex, 1)\n      state.opened.splice(newIndex, 0, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 新增一个 tag (打开一个页面)\n     * @param {Object} context\n     * @param {Object} payload new tag info\n     */\n    async add ({ state, commit, dispatch }, { tag, params, query, fullPath }) {\n      // 设置新的 tag 在新打开一个以前没打开过的页面时使用\n      let newTag = tag\n      newTag.params = params || newTag.params\n      newTag.query = query || newTag.query\n      newTag.fullPath = fullPath || newTag.fullPath\n      // 添加进当前显示的页面数组\n      state.opened.push(newTag)\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive(newTag)) commit('keepAlivePush', tag.name)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class current\n     * @description 打开一个新的页面\n     * @param {Object} context\n     * @param {Object} payload 从路由钩子的 to 对象上获取 { name, params, query, fullPath, meta } 路由信息\n     */\n    async open ({ state, commit, dispatch }, { name, params, query, fullPath, meta }) {\n      // 已经打开的页面\n      let opened = state.opened\n      // 判断此页面是否已经打开 并且记录位置\n      let pageOpendIndex = 0\n      const pageOpend = opened.find((page, index) => {\n        const same = page.fullPath === fullPath\n        pageOpendIndex = same ? index : pageOpendIndex\n        return same\n      })\n      if (pageOpend) {\n        // 页面以前打开过\n        await dispatch('openedUpdate', {\n          index: pageOpendIndex,\n          params,\n          query,\n          fullPath\n        })\n      } else {\n        // 页面以前没有打开过\n        let page = state.pool.find(t => t.name === name)\n        // 如果这里没有找到 page 代表这个路由虽然在框架内 但是不参与标签页显示\n        if (page) {\n          await dispatch('add', {\n            tag: Object.assign({}, page),\n            params,\n            query,\n            fullPath\n          })\n        }\n      }\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive({ meta })) commit('keepAlivePush', name)\n      // 设置当前的页面\n      commit('currentSet', fullPath)\n    },\n    /**\n     * @class opened\n     * @description 关闭一个 tag (关闭一个页面)\n     * @param {Object} context\n     * @param {Object} payload { tagName: 要关闭的标签名字 }\n     */\n    async close ({ state, commit, dispatch }, { tagName }) {\n      // 预定下个新页面\n      let newPage = {}\n      const isCurrent = state.current === tagName\n      // 如果关闭的页面就是当前显示的页面\n      if (isCurrent) {\n        // 去找一个新的页面\n        let len = state.opened.length\n        for (let i = 0; i < len; i++) {\n          if (state.opened[i].fullPath === tagName) {\n            newPage = i < len - 1 ? state.opened[i + 1] : state.opened[i - 1]\n            break\n          }\n        }\n      }\n      // 找到这个页面在已经打开的数据里是第几个\n      const index = state.opened.findIndex(page => page.fullPath === tagName)\n      if (index >= 0) {\n        // 如果这个页面是缓存的页面 将其在缓存设置中删除\n        commit('keepAliveRemove', state.opened[index].name)\n        // 更新数据 删除关闭的页面\n        state.opened.splice(index, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 决定最后停留的页面\n      if (isCurrent) {\n        const { name = 'index', params = {}, query = {} } = newPage\n        let routerObj = { name, params, query }\n        await router.push(routerObj)\n      }\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签左边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeLeft ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      if (currentIndex > 0) {\n        // 删除打开的页面 并在缓存设置中删除\n        for (let i = state.opened.length - 1; i >= 0; i--) {\n          if (state.opened[i].name === 'index' || i >= currentIndex) {\n            continue\n          }\n\n          commit('keepAliveRemove', state.opened[i].name)\n          state.opened.splice(i, 1)\n        }\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签右边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeRight ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex >= i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前激活之外的 tag\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeOther ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面数据 并更新缓存设置\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex === i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置新的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭所有 tag\n     * @param {Object} context\n     */\n    async closeAll ({ state, commit, dispatch }) {\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index') {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 关闭所有的标签页后需要判断一次现在是不是在首页\n      if (router.app.$route.name !== 'index') {\n        await router.push({ name: 'index' })\n      }\n    }\n  },\n  mutations: {\n    /**\n     * @class keepAlive\n     * @description 从已经打开的页面记录中更新需要缓存的页面记录\n     * @param {Object} state state\n     */\n    keepAliveRefresh (state) {\n      state.keepAlive = state.opened.filter(item => isKeepAlive(item)).map(e => e.name)\n    },\n    /**\n     * @description 删除一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAliveRemove (state, name) {\n      const list = cloneDeep(state.keepAlive)\n      const index = list.findIndex(item => item === name)\n      if (index !== -1) {\n        list.splice(index, 1)\n        state.keepAlive = list\n      }\n    },\n    /**\n     * @description 增加一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAlivePush (state, name) {\n      const keep = cloneDeep(state.keepAlive)\n      keep.push(name)\n      state.keepAlive = uniq(keep)\n    },\n    /**\n     * @description 清空页面缓存设置\n     * @param {Object} state state\n     */\n    keepAliveClean (state) {\n      state.keepAlive = []\n    },\n    /**\n     * @class current\n     * @description 设置当前激活的页面 fullPath\n     * @param {Object} state state\n     * @param {String} fullPath new fullPath\n     */\n    currentSet (state, fullPath) {\n      state.current = fullPath\n    },\n    /**\n     * @class pool\n     * @description 保存 pool (候选池)\n     * @param {Object} state state\n     * @param {Array} routes routes\n     */\n    init (state, routes) {\n      const pool = []\n      const push = function (routes) {\n        routes.forEach(route => {\n          if (route.children && route.children.length > 0) {\n            push(route.children)\n          } else {\n            if (!route.hidden) {\n              const { meta, name, path } = route\n              pool.push({ meta, name, path })\n            }\n          }\n        })\n      }\n      push(routes)\n      state.pool = pool\n    }\n  }\n}\n"]}]}