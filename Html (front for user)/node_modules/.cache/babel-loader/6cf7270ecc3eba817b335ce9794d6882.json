{"remainingRequest":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\thread-loader\\dist\\cjs.js!D:\\实践\\d2-admin-start-kit-master\\node_modules\\babel-loader\\lib\\index.js!D:\\实践\\d2-admin-start-kit-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\实践\\d2-admin-start-kit-master\\src\\store\\modules\\d2admin\\modules\\theme.js","dependencies":[{"path":"D:\\实践\\d2-admin-start-kit-master\\src\\store\\modules\\d2admin\\modules\\theme.js","mtime":1587908413000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\实践\\d2-admin-start-kit-master\\node_modules\\eslint-loader\\index.js","mtime":1588755592739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovXHU1QjlFXHU4REY1L2QyLWFkbWluLXN0YXJ0LWtpdC1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLyDorr7nva7mlofku7YKaW1wb3J0IHNldHRpbmcgZnJvbSAnQC9zZXR0aW5nLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIC8vIOS4u+mimAogICAgbGlzdDogc2V0dGluZy50aGVtZS5saXN0LAogICAgLy8g546w5Zyo5r+A5rS755qE5Li76aKYIOi/meW6lOivpeaYr+S4gOS4quWQjeWtlyDkuI3mmK/lr7nosaEKICAgIGFjdGl2ZU5hbWU6IHNldHRpbmcudGhlbWUubGlzdFswXS5uYW1lCiAgfSwKICBnZXR0ZXJzOiB7CiAgICAvKioKICAgICAqIEBkZXNjcmlwdGlvbiDov5Tlm57lvZPliY3nmoTkuLvpopjkv6Hmga8g5LiN5piv5LiA5Liq5ZCN5a2XIOiAjOaYr+W9k+WJjea/gOa0u+S4u+mimOeahOaJgOacieaVsOaNrgogICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIHN0YXRlCiAgICAgKi8KICAgIGFjdGl2ZVNldHRpbmc6IGZ1bmN0aW9uIGFjdGl2ZVNldHRpbmcoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmxpc3QuZmluZChmdW5jdGlvbiAodGhlbWUpIHsKICAgICAgICByZXR1cm4gdGhlbWUubmFtZSA9PT0gc3RhdGUuYWN0aXZlTmFtZTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICAvKioKICAgICAqIEBkZXNjcmlwdGlvbiDmv4DmtLvkuIDkuKrkuLvpopgKICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0aGVtZVZhbHVlIOmcgOimgea/gOa0u+eahOS4u+mimOWQjeensAogICAgICovCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChfcmVmLCB0aGVtZU5hbWUpIHsKICAgICAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSwKICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LAogICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc29sdmUpIHsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l6L+Z5Liq5Li76aKY5Zyo5Li76aKY5YiX6KGo6YeM5piv5ZCm5a2Y5ZyoCiAgICAgICAgICAgICAgICAgIHN0YXRlLmFjdGl2ZU5hbWUgPSBzdGF0ZS5saXN0LmZpbmQoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZS5uYW1lID09PSB0aGVtZU5hbWU7CiAgICAgICAgICAgICAgICAgIH0pID8gdGhlbWVOYW1lIDogc3RhdGUubGlzdFswXS5uYW1lOyAvLyDlsIYgdnVleCDkuK3nmoTkuLvpopjlupTnlKjliLAgZG9tCgogICAgICAgICAgICAgICAgICBjb21taXQoJ2RvbScpOyAvLyDmjIHkuYXljJYKCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2QyYWRtaW4vZGIvc2V0JywgewogICAgICAgICAgICAgICAgICAgIGRiTmFtZTogJ3N5cycsCiAgICAgICAgICAgICAgICAgICAgcGF0aDogJ3RoZW1lLmFjdGl2ZU5hbWUnLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBzdGF0ZS5hY3RpdmVOYW1lLAogICAgICAgICAgICAgICAgICAgIHVzZXI6IHRydWUKICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAvLyBlbmQKICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwoKICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9LAoKICAgIC8qKgogICAgICogQGRlc2NyaXB0aW9uIOS7juaMgeS5heWMluaVsOaNruWKoOi9veS4u+mimOiuvue9riAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dAogICAgICovCiAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKF9yZWYzKSB7CiAgICAgIHZhciBzdGF0ZSA9IF9yZWYzLnN0YXRlLAogICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzb2x2ZSkgewogICAgICAgICAgdmFyIGFjdGl2ZU5hbWU7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZDJhZG1pbi9kYi9nZXQnLCB7CiAgICAgICAgICAgICAgICAgICAgZGJOYW1lOiAnc3lzJywKICAgICAgICAgICAgICAgICAgICBwYXRoOiAndGhlbWUuYWN0aXZlTmFtZScsCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBzdGF0ZS5saXN0WzBdLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgdXNlcjogdHJ1ZQogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIGFjdGl2ZU5hbWUgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICAgIGlmICghc3RhdGUubGlzdC5maW5kKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGUubmFtZSA9PT0gYWN0aXZlTmFtZTsKICAgICAgICAgICAgICAgICAgfSkpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHN0YXRlLmFjdGl2ZU5hbWUgPSBhY3RpdmVOYW1lOwogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgIHN0YXRlLmFjdGl2ZU5hbWUgPSBzdGF0ZS5saXN0WzBdLm5hbWU7IC8vIOaMgeS5heWMlgoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdkMmFkbWluL2RiL3NldCcsIHsKICAgICAgICAgICAgICAgICAgICBkYk5hbWU6ICdzeXMnLAogICAgICAgICAgICAgICAgICAgIHBhdGg6ICd0aGVtZS5hY3RpdmVOYW1lJywKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc3RhdGUuYWN0aXZlTmFtZSwKICAgICAgICAgICAgICAgICAgICB1c2VyOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICAgIC8vIOWwhiB2dWV4IOS4reeahOS4u+mimOW6lOeUqOWIsCBkb20KICAgICAgICAgICAgICAgICAgY29tbWl0KCdkb20nKTsgLy8gZW5kCgogICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CgogICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgIH0pKTsKCiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8qKgogICAgICogQGRlc2NyaXB0aW9uIOWwhiB2dWV4IOS4reeahOS4u+mimOW6lOeUqOWIsCBkb20KICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZSBzdGF0ZQogICAgICovCiAgICBkb206IGZ1bmN0aW9uIGRvbShzdGF0ZSkgewogICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSA9ICJ0aGVtZS0iLmNvbmNhdChzdGF0ZS5hY3RpdmVOYW1lKTsKICAgIH0KICB9Cn07"},null]}